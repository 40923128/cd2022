var tipuesearch = {"pages": [{'title': 'About', 'text': '本學期主要使用軟體: NX1980 ->參考與下載網址: cd2022 (mde.tw) \xa0(只允許使用校用帳戶或是連線至主機下載) \n Github倉儲 \n ->mdecourse cmsimde: cmsimde \xa0 \n', 'tags': '', 'url': 'About.html'}, {'title': 'blog', 'text': '', 'tags': '', 'url': 'blog.html'}, {'title': 'AGX REPO(W4)', 'text': '在fork的倉儲下，各組員pull requests組員能自行更新到原始倉儲檔案 1.新建一個自己倉儲下連接原倉儲的分支 \n git remote add (uptream name) (repo url.git)\n \n (新增後可查詢自己分支細節) \n git remote -v\n \n 2.拉取原倉up-to-date檔案(到自己設的分倉支) \n git fetch (upstream name) \n 3.拉下來後，再將分支內容覆蓋至自己的原分支 \n git merge (upstream name)/main\n \n \n 上述步驟做完後就是以原倉儲上的內容進行更改 改完上傳github後，進行pull request至原倉儲做合併 \n', 'tags': '', 'url': 'AGX REPO(W4).html'}, {'title': 'Rep create', 'text': '參考資料 cmsimde rep: mdecourse/cmsimde: cmsimde main scripts (github.com) \n 參考步驟: CD_Guide (mde.tw) \n Step: 1.Create a "cd2022" rep on github \n 2.勾選" Add .gitignore" and 選擇 python \n 3.git clone rep to USB (on cmd) \n 4. 進入cd2022 倉儲 \n cd cd2022\n \n 5.擷取cmsimde檔案 (尾部檔名可不打) \n git submodule add https://github.com/mdecourse/cmsimde.git (cmsimde) \n 6.將/up_dir內的資料全部複製到/cd2022 (保留原始的.gitgnore) \n 7.進去https更改倉儲標題，並gemerate_page \n 8.acp 上傳檔案 \n', 'tags': '', 'url': 'Rep create.html'}, {'title': 'Week problem', 'text': 'w1 在IPV4下的網路流量無法滿足全教室的學生使用，必須切換成IPV6才足夠 將老師設定的啟動檔以.bat形式執行 CADLab 中的 IPv6 網路設定 · Discussion #2 · mdecourse/wcm2022 · GitHub 以訪指惡意病毒向外傳輸數據 \n w2 \n 學校電腦因主控在老師的電腦，無法使用"管理員執行".bat，使上述的執行檔無法完全使用 \n w3 \n NX1980 .bat檔在IPV6下需要加入PROXY指令 \n set HTTP_PROXY = http://kmolab:kmolab10@[2001:288:6004:17::42]:3128\nset HTTPS_PROXY = http://kmolab:kmolab10@[2001:288:6004:17::42]:3128 \n 並且在連上主機端需要使用"::37"主機 \n set SPLM_LICENSE_SERVER=28000@[2001:288:6004:17::37] \n w7 \n 1.git clone  https://github.com/mdecourse/scarysim.git 2.修改 scarysim.pro, 蓋掉第 11 行, 成為 # LIBS\xa0\xa0\xa0\xa0 += -lglut -lGLU 3.cd scarysim 4.qmake -o Makefile scarysim.pro 5.mingw32-make -f Makefile.Release 可以在 release 目錄取得 scarysim.exe 6.將scarysim.exe,ase.obj, arm1.obj, arm2.obj, arm3.obj拉至coppeliasim410_msys2 7.啟用scarysim.exe \n \n w10 \n (nx_block_ui) \n 主要學習如何使用NXUI改變零件尺寸，配合python更改參數 \n 實作檔案: w10_block_ui \n 以下是操作影片 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n w12 \n 1.cadlab startup \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n 2.NXOpen Python \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n w13(coppeliasim python操作) \n 1.將coppeliasim加入啟動檔啟動程序 \n path=%Path%;C:\\CoppeliaSimEdu_4.3.0_rev3\nstart /D C:\\CoppeliaSimEdu_4.3.0_rev3 coppeliasim.exe \n start後面要依照放置槽區設定 2.操作步驟 (少一步驟>在user.txt>executeUnsafe改為true) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Week problem.html'}, {'title': 'NX 小組作業', 'text': '22&26:工程圖製作 \n 原影片:22> 4472 LAB 06 ROCKER ARM Working Drawing - YouTube \xa0 \xa0 \xa0 \xa0 \xa0 26> 4472 HW16 NX Exploded Views - YouTube \n 隨身版的nx沒有辦法開啟工程圖(原先影片上的開啟方式:application>dratfing) \n 而就連快捷鍵也無法將工程圖版頁開啟 \n (上面唯一的drafting standard一樣是無法使用的) \n 23:沒有其中程圖，且沒樣板檔案，無法實際演示 已知的概念是沿著渦輪葉片的縫隙進行打孔(曲面)，使其孔洞會在葉片之間生成 \n 原影片: 4472 HW13 NX Linked Body Brake Rotor - YouTube \n 24:原先應該使用excel去跑變數表，但是NX與excel的插件因連線實在無法輕易解決，所以最後還是直接手動改變數表較快 作業理念:使用25號-第14個工件做樣板，並將底部增加變數孔洞 檔案: https://drive.google.com/file/d/12vskJyVGYNpC_vN_0DCzNhzhA7sbAJas/view?usp=sharing \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 25:利用24所做出來的變數零件去蓋一個積木，並且能將不同的積木以不同的顏色做區分，本來應該EXCEL做出變數表，但因為各種版本更新後兩個程式差件改變，導致無法正常運行線上變數表，所以本影片就直接改參數並儲存。 \n \n \n \n \n   \n \n \n \n \n', 'tags': '', 'url': 'NX 小組作業.html'}, {'title': '小組Uarm工作', 'text': '完成零件 :https://drive.google.com/file/d/1Vbn5lExbv4dQIlw28kp6Cprca7_qoXUo/view?usp=sharing \n (裡面包含零件檔和組合檔 all->組合stl 其餘->單一零件stl) \n \xa0零件繪製過程: \n 1. \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 2 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 3 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 4 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 5 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 6 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 7 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 8 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 9 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 10 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 11 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 12 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 13 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '小組Uarm工作.html'}, {'title': 'Student Group', 'text': '第1組: repo: \xa0 40923131 \xa0 www: \xa0 40923131 \xa0 cd2022ag1-repo: \xa0 40923131 \xa0 cd2022ag1-www: \xa0 40923131 repo: \xa0 40923138 \xa0 www: \xa0 40923138 \xa0 cd2022ag1-repo: \xa0 40923138 \xa0 cd2022ag1-www: \xa0 40923138 repo: \xa0 40923157 \xa0 www: \xa0 40923157 \xa0 cd2022ag1-repo: \xa0 40923157 \xa0 cd2022ag1-www: \xa0 40923157 第2組: repo: \xa0 40923101 \xa0 www: \xa0 40923101 \xa0 cd2022ag2-repo: \xa0 40923101 \xa0 cd2022ag2-www: \xa0 40923101 repo: \xa0 40923103 \xa0 www: \xa0 40923103 \xa0 cd2022ag2-repo: \xa0 40923103 \xa0 cd2022ag2-www: \xa0 40923103 repo: \xa0 40923108 \xa0 www: \xa0 40923108 \xa0 cd2022ag2-repo: \xa0 40923108 \xa0 cd2022ag2-www: \xa0 40923108 repo: \xa0 40923137 \xa0 www: \xa0 40923137 \xa0 cd2022ag2-repo: \xa0 40923137 \xa0 cd2022ag2-www: \xa0 40923137 repo: \xa0 40923154 \xa0 www: \xa0 40923154 \xa0 cd2022ag2-repo: \xa0 40923154 \xa0 cd2022ag2-www: \xa0 40923154 repo: \xa0 40923156 \xa0 www: \xa0 40923156 \xa0 cd2022ag2-repo: \xa0 40923156 \xa0 cd2022ag2-www: \xa0 40923156 repo: \xa0 40923119 \xa0 www: \xa0 40923119 \xa0 cd2022ag2-repo: \xa0 40923119 \xa0 cd2022ag2-www: \xa0 40923119 repo: \xa0 40971134 \xa0 www: \xa0 40971134 \xa0 cd2022ag2-repo: \xa0 40971134 \xa0 cd2022ag2-www: \xa0 40971134 第3組: repo: \xa0 40923102 \xa0 www: \xa0 40923102 \xa0 cd2022ag3-repo: \xa0 40923102 \xa0 cd2022ag3-www: \xa0 40923102 repo: \xa0 40923104 \xa0 www: \xa0 40923104 \xa0 cd2022ag3-repo: \xa0 40923104 \xa0 cd2022ag3-www: \xa0 40923104 repo: \xa0 40923105 \xa0 www: \xa0 40923105 \xa0 cd2022ag3-repo: \xa0 40923105 \xa0 cd2022ag3-www: \xa0 40923105 repo: \xa0 40923106 \xa0 www: \xa0 40923106 \xa0 cd2022ag3-repo: \xa0 40923106 \xa0 cd2022ag3-www: \xa0 40923106 repo: \xa0 40923107 \xa0 www: \xa0 40923107 \xa0 cd2022ag3-repo: \xa0 40923107 \xa0 cd2022ag3-www: \xa0 40923107 repo: \xa0 40923110 \xa0 www: \xa0 40923110 \xa0 cd2022ag3-repo: \xa0 40923110 \xa0 cd2022ag3-www: \xa0 40923110 第4組: repo: \xa0 40923109 \xa0 www: \xa0 40923109 \xa0 cd2022ag4-repo: \xa0 40923109 \xa0 cd2022ag4-www: \xa0 40923109 repo: \xa0 40923111 \xa0 www: \xa0 40923111 \xa0 cd2022ag4-repo: \xa0 40923111 \xa0 cd2022ag4-www: \xa0 40923111 repo: \xa0 40923114 \xa0 www: \xa0 40923114 \xa0 cd2022ag4-repo: \xa0 40923114 \xa0 cd2022ag4-www: \xa0 40923114 repo: \xa0 40923115 \xa0 www: \xa0 40923115 \xa0 cd2022ag4-repo: \xa0 40923115 \xa0 cd2022ag4-www: \xa0 40923115 repo: \xa0 40923122 \xa0 www: \xa0 40923122 \xa0 cd2022ag4-repo: \xa0 40923122 \xa0 cd2022ag4-www: \xa0 40923122 repo: \xa0 40923129 \xa0 www: \xa0 40923129 \xa0 cd2022ag4-repo: \xa0 40923129 \xa0 cd2022ag4-www: \xa0 40923129 repo: \xa0 40923146 \xa0 www: \xa0 40923146 \xa0 cd2022ag4-repo: \xa0 40923146 \xa0 cd2022ag4-www: \xa0 40923146 repo: \xa0 40923148 \xa0 www: \xa0 40923148 \xa0 cd2022ag4-repo: \xa0 40923148 \xa0 cd2022ag4-www: \xa0 40923148 第5組: repo: \xa0 40923116 \xa0 www: \xa0 40923116 \xa0 cd2022ag5-repo: \xa0 40923116 \xa0 cd2022ag5-www: \xa0 40923116 repo: \xa0 40923124 \xa0 www: \xa0 40923124 \xa0 cd2022ag5-repo: \xa0 40923124 \xa0 cd2022ag5-www: \xa0 40923124 repo: \xa0 40923125 \xa0 www: \xa0 40923125 \xa0 cd2022ag5-repo: \xa0 40923125 \xa0 cd2022ag5-www: \xa0 40923125 repo: \xa0 40923126 \xa0 www: \xa0 40923126 \xa0 cd2022ag5-repo: \xa0 40923126 \xa0 cd2022ag5-www: \xa0 40923126 repo: \xa0 40923127 \xa0 www: \xa0 40923127 \xa0 cd2022ag5-repo: \xa0 40923127 \xa0 cd2022ag5-www: \xa0 40923127 repo: \xa0 40923128 \xa0 www: \xa0 40923128 \xa0 cd2022ag5-repo: \xa0 40923128 \xa0 cd2022ag5-www: \xa0 40923128 第6組: repo: \xa0 40923123 \xa0 www: \xa0 40923123 \xa0 cd2022ag6-repo: \xa0 40923123 \xa0 cd2022ag6-www: \xa0 40923123 repo: \xa0 40923133 \xa0 www: \xa0 40923133 \xa0 cd2022ag6-repo: \xa0 40923133 \xa0 cd2022ag6-www: \xa0 40923133 repo: \xa0 40923134 \xa0 www: \xa0 40923134 \xa0 cd2022ag6-repo: \xa0 40923134 \xa0 cd2022ag6-www: \xa0 40923134 repo: \xa0 40923135 \xa0 www: \xa0 40923135 \xa0 cd2022ag6-repo: \xa0 40923135 \xa0 cd2022ag6-www: \xa0 40923135 repo: \xa0 40923139 \xa0 www: \xa0 40923139 \xa0 cd2022ag6-repo: \xa0 40923139 \xa0 cd2022ag6-www: \xa0 40923139 repo: \xa0 40923142 \xa0 www: \xa0 40923142 \xa0 cd2022ag6-repo: \xa0 40923142 \xa0 cd2022ag6-www: \xa0 40923142 repo: \xa0 40923151 \xa0 www: \xa0 40923151 \xa0 cd2022ag6-repo: \xa0 40923151 \xa0 cd2022ag6-www: \xa0 40923151 第7組: repo: \xa0 40923113 \xa0 www: \xa0 40923113 \xa0 cd2022ag7-repo: \xa0 40923113 \xa0 cd2022ag7-www: \xa0 40923113 repo: \xa0 40923130 \xa0 www: \xa0 40923130 \xa0 cd2022ag7-repo: \xa0 40923130 \xa0 cd2022ag7-www: \xa0 40923130 repo: \xa0 40923140 \xa0 www: \xa0 40923140 \xa0 cd2022ag7-repo: \xa0 40923140 \xa0 cd2022ag7-www: \xa0 40923140 repo: \xa0 40923144 \xa0 www: \xa0 40923144 \xa0 cd2022ag7-repo: \xa0 40923144 \xa0 cd2022ag7-www: \xa0 40923144 repo: \xa0 40923149 \xa0 www: \xa0 40923149 \xa0 cd2022ag7-repo: \xa0 40923149 \xa0 cd2022ag7-www: \xa0 40923149 repo: \xa0 40923150 \xa0 www: \xa0 40923150 \xa0 cd2022ag7-repo: \xa0 40923150 \xa0 cd2022ag7-www: \xa0 40923150 repo: \xa0 40923152 \xa0 www: \xa0 40923152 \xa0 cd2022ag7-repo: \xa0 40923152 \xa0 cd2022ag7-www: \xa0 40923152 \n 分組名單指令 \n from browser import html\nfrom browser import document\nimport random\n\nbrython_div = document["brython_div"]\n\n# 根據 href 與 content 將 html 元件中的 anchor 插入頁面\ndef makeLink(href, content):\n    brython_div <= html.A(content, href=href)\n    #brython_div <= html.BR()\n\naorb = "a"\nurl = "https://mde.tw/studlist/2022spring/2a.txt"\ncourse = "cd2022"\n# 從 url 讀取資料後, 以跳行符號分割資料進入數列後\n# 去除數列中的第一筆與最後一筆資料後可得每位學員所填的資料\ndata = open(url).read().split("\\n")[1:-1]\n#print(data)\n# 再以 \\t 分割每位學員的資料, \n#可以取得每位學員的學號, github 帳號與組別\nbig = []\nnum_github = {}\nfor i in data:\n    stud_no, github, grp_no = i.split("\\t")\n    #print(stud_no, github, grp_no)\n    big.append([stud_no, github, grp_no])\n    if github != "":\n        num_github[stud_no] = github\n    else:\n        num_github[stud_no] = stud_no\n#print(big)\n# 根據每一 element 的第三個 element sort\nbig.sort(key = lambda x: x[2])\n# big 已經按照組別排序\n#print(big)\nungrouped = []\ngrouped = []\nfor i in big:\n    if i[2] == "":\n        ungrouped.append(i[0])\n    else:\n        # 將組別放到第一位置\n        grouped.append([i[2], i[0]])\n#print(grouped)\n#print(ungrouped)\nd = {}\n# 逐一檢視 grouped 數列\nfor i in grouped:\n    # 若該組序已存在 d dict 中,\n    # 則以 extend() 納入除組序之外的組員學號\n    if i[0] in d:\n        d[i[0]].extend(i[1:])\n        #print("i[0] in d:",i[0], "d:", d)\n    else:\n        # 若已納分組的 element 中之組序為全新組序,\n        # 則將該已納分組的 element 放入 dict 首位元素\n        # 準備透過 extend() 納入其他組員學號\n        d[i[0]] = i\n        #print("i i[0] not in d:", i, "d:", d)\n#print("finally d:", d, "d.values():", d.values())\ngroup_member = list(d.values())\n# group_member 第一位為組序, 隨後為組員學號\n#print(group_member)\nrandom.shuffle(ungrouped)\n#print("ungrouped:" + str(len(ungrouped)))\ngrp = 1\ngroup = []\nfor i in group_member:\n    #print("grp " + str(i[0]) + ": num, " + str(len(i[1:])))\n    if len(i[1:]) < 8:\n        #print("can take " + str(8 - len(i[1:])) + "members")\n        # 若仍有學員未納組, 則可根據缺額補入學員學號\n        try:\n            #print("add " + str(ungrouped[:8-len(i[1:])]))\n            i.extend(list(ungrouped[:8-len(i[1:])]))\n            # 拿掉已經分配組別的學員學號\n            ungrouped = ungrouped[8-len(i[1:]):]\n        except:\n            #print("no member to add!")\n            pass\n    else:\n        #print("full")\n        pass\n    # 根據增量決定組序\n    i[0] = str(grp)\n    group.append(i)\n    grp += 1\n#print(group)\nfor i in group:\n    brython_div <= "第" + str(i[0]) + "組:" + html.BR()\n    grp_repo = course + aorb + "g" + str(i[0])\n    for num in i[1:]:\n        # num 為各組組員學號\n        #print(num)\n        studhref = "https://"+ str(num_github[num]) + ".github.io/" + course\n        repohref = "https://github.com/"+ str(num_github[num]) +"/"+course\n        grphref = "https://"+ str(num_github[num]) + ".github.io/" + grp_repo\n        grp_repohref = "https://github.com/"+ str(num_github[num]) +"/" + grp_repo       \n        brython_div <= "repo: "\n        makeLink(repohref, str(num))\n        brython_div <= " www: "\n        makeLink(studhref, str(num))\n        brython_div <= " " + grp_repo + "-repo: "\n        makeLink(grp_repohref, str(num))\n        brython_div <= " " + grp_repo + "-www: "\n        makeLink(grphref, str(num))\n        brython_div <= html.BR()\nprint("done") \n \n', 'tags': '', 'url': 'Student Group.html'}, {'title': 'BLogsetting', 'text': '以下為關於設定blog的wink影片 主要為設定倉儲的leo檔案 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'BLogsetting.html'}]};